{"version":3,"file":"static/js/whoweare.8856171e.chunk.js","mappings":"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","sources":["components/micro/CDForm.js","components/micro/CDResult.js","components/micro/CDGraph.js","pages/CDdeposit.jsx"],"sourcesContent":["// CDForm.js\nimport React, { useState } from 'react';\n\nfunction CDForm({ onCalculate }) {\n  const [principal, setPrincipal] = useState(10000); // Initial deposit\n  const [rate, setRate] = useState(5); // Annual interest rate\n  const [years, setYears] = useState(2); // Number of years\n\n  const handleCalculate = () => {\n    onCalculate(principal, rate, years);\n  };\n\n  return (\n    <div className=\"w-1/3 mx-auto p-4\">\n      <div className=\"mb-4\">\n        <label>Principal Amount</label>\n        <input\n          type=\"number\"\n          value={principal}\n          onChange={(e) => setPrincipal(e.target.value)}\n          className=\"w-full p-2 border border-gray-300\"\n        />\n      </div>\n      <div className=\"mb-4\">\n        <label>Annual Interest Rate (%)</label>\n        <input\n          type=\"number\"\n          value={rate}\n          onChange={(e) => setRate(e.target.value)}\n          className=\"w-full p-2 border border-gray-300\"\n        />\n      </div>\n      <div className=\"mb-4\">\n        <label>Number of Years</label>\n        <input\n          type=\"number\"\n          value={years}\n          onChange={(e) => setYears(e.target.value)}\n          className=\"w-full p-2 border border-gray-300\"\n        />\n      </div>\n      <button onClick={handleCalculate} className=\"bg-blue-500 text-white p-2 rounded\">\n        Calculate\n      </button>\n    </div>\n  );\n}\n\nexport default CDForm;\n","// CDResult.js\nimport React from 'react';\n\nfunction CDResult({ result }) {\n  return (\n    <div className=\"w-1/3 mx-auto mt-4 p-4 border border-gray-300\">\n      <h2 className=\"text-xl font-semibold mb-2\">CD Calculator Result</h2>\n      <div>\n        <p>Final Amount: ${result.finalAmount.toFixed(2)}</p>\n        <p>Interest Earned: ${result.interestEarned.toFixed(2)}</p>\n      </div>\n    </div>\n  );\n}\n\nexport default CDResult;","// CDGraph.js\nimport React, { useEffect, useRef, useState } from 'react';\nimport { Chart as ChartJS, ArcElement, Tooltip, Legend } from 'chart.js';\nimport { Doughnut } from 'react-chartjs-2';\n\nChartJS.register(ArcElement, Tooltip, Legend);\n\n\nconst dataD = {\n    labels: ['Red', 'Blue', 'Yellow', 'Green', 'Purple', 'Orange'],\n    datasets: [\n      {\n        label: '# of Votes',\n        data: [12, 19, 3, 5, 2, 3],\n        backgroundColor: [\n          'rgba(255, 99, 132, 0.2)',\n          'rgba(54, 162, 235, 0.2)',\n          'rgba(255, 206, 86, 0.2)',\n          'rgba(75, 192, 192, 0.2)',\n          'rgba(153, 102, 255, 0.2)',\n          'rgba(255, 159, 64, 0.2)',\n        ],\n        borderColor: [\n          'rgba(255, 99, 132, 1)',\n          'rgba(54, 162, 235, 1)',\n          'rgba(255, 206, 86, 1)',\n          'rgba(75, 192, 192, 1)',\n          'rgba(153, 102, 255, 1)',\n          'rgba(255, 159, 64, 1)',\n        ],\n        borderWidth: 1,\n      },\n    ],\n  };\nfunction CDGraph({ data, principal, rate }) {\n    const [chartData, setChartData] = useState();\n\nuseEffect(() => {\n    console.log(\"get all the label\", data.years.map((year) => `${year} Years`));\n    const chartData = {\n      labels: data.years.map((year) => `${year} Years`),\n      datasets: [\n        {\n          data: data.principal,\n          backgroundColor: [\n            'rgba(75, 192, 192, 0.2)',\n            'rgba(255, 99, 132, 0.2)',\n            'rgba(255, 206, 86, 0.2)',\n            'rgba(54, 162, 235, 0.2)',\n            'rgba(153, 102, 255, 0.2)',\n            'rgba(255, 159, 64, 0.2)',\n          ],\n        },\n      ],\n    };\n    console.log(\"chartdata\", chartData);\n    setChartData(chartData);\n},[data]);\n\n\n    console.log(\">>> updated chartData\", chartData);\n\n  return chartData ? <Doughnut data={chartData} /> : <></>;\n}\n\nexport default CDGraph;\n","import React, { useState } from \"react\";\nimport CDForm from \"../components/micro/CDForm\";\nimport CDResult from \"../components/micro/CDResult\";\nimport CDGraph from \"../components/micro/CDGraph\";\nimport { Heading } from \"@chakra-ui/react\";\n\nfunction CDdeposit() {\n  const [result, setResult] = useState(null);\n  const [principal] = useState(10000); // Initial deposit\n  const [rate] = useState(5); // Annual interest rate\n\n  const calculateCD = (principal, rate, years) => {\n    const interestRate = rate / 100;\n    const finalAmount = principal * Math.pow(1 + interestRate, years);\n    const interestEarned = finalAmount - principal;\n\n    setResult({ finalAmount, interestEarned });\n  };\n\n  return (\n    <div className=\"min-h-screen bg-bg-color p-4 border border-gray-300 rounded-lg shadow-md mx-auto \">\n      <Heading className=\"!text-2xl text-center py-4 text-black font-bold\">\n        Certificate of Deposit Calculator\n        <div className=\"absolute bottom-0 left-0 right-0 m-auto top-[2rem] w-40 border-b-2 border-solid border-gray-500\"></div>\n      </Heading>\n      <CDForm onCalculate={calculateCD} />\n      {result && <CDResult result={result} />}\n      {result && (\n        <div className=\"w-1/2 mx-auto mt-8\">\n          <CDGraph\n            principal={principal}\n            rate={rate}\n            data={{\n              years: Array.from({ length: 6 }, (_, i) => i + 1),\n              principal: Array.from({ length: 6 }, (_, i) => principal * Math.pow(1 + rate / 100, i + 1) - principal),\n            }}\n          />\n        </div>\n      )}\n    </div>\n  );\n}\n\nexport default CDdeposit;\n"],"names":["_ref","onCalculate","_useState","useState","_useState2","_slicedToArray","principal","setPrincipal","_useState3","_useState4","rate","setRate","_useState5","_useState6","years","setYears","_jsxs","className","children","_jsx","type","value","onChange","e","target","onClick","result","finalAmount","toFixed","interestEarned","ChartJS","register","ArcElement","Tooltip","Legend","data","chartData","setChartData","useEffect","console","log","map","year","concat","labels","datasets","backgroundColor","Doughnut","_Fragment","setResult","Heading","CDForm","interestRate","Math","pow","CDResult","CDGraph","Array","from","length","_","i"],"sourceRoot":""}